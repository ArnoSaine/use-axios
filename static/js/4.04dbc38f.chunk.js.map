{"version":3,"sources":["mocks/requestLogicHandlers.js","mocks/browser.js"],"names":["definition","require","id","items","paths","get","responses","content","examples","value","requestLogicHandlers","postItem","request","push","_objectSpread","body","timestamp","Date","now","_id","String","putItem","item","index","findIndex","params","itemId","putItems","_step","itemUpdates","_iterator","_createForOfIteratorHelper","_loop","itemUpdate","s","n","done","err","e","f","deleteItem","splice","deleteItems","_step2","_iterator2","_loop2","worker","setupWorker","apply","_toConsumableArray","handlers"],"mappings":"ykEAAaA,EAAaC,EAAQ,KAE9BC,EAAK,EAEHC,EACJH,EAAWI,MAAM,UAAUC,IAAIC,UAAU,KAAOC,QAAQ,oBACrDC,SAAS,aAAaC,MAiCZC,EA/Bc,CAC3BC,SAAQ,SAACC,GACPT,EAAMU,KAAIC,wBAAC,CAAC,EACPF,EAAQG,MAAI,IACfC,UAAWC,KAAKC,MAChBC,IAAKC,OAAOlB,OAEhB,EACAmB,QAAO,SAACT,GACN,IAAMU,EAAOV,EAAQG,KACfQ,EAAQpB,EAAMqB,WAAU,SAACF,GAAI,OAAKA,EAAKH,MAAQP,EAAQa,OAAOC,MAAM,IAC1EvB,EAAMoB,GAASD,CACjB,EACAK,SAAQ,SAACf,GACP,IACoCgB,EAD9BC,EAAcjB,EAAQG,KAAKe,EAAAC,YACRF,GAAW,QAAAG,EAAA,eAAzBC,EAAUL,EAAAnB,MACbc,EAAQpB,EAAMqB,WAAU,SAACF,GAAI,OAAKA,EAAKH,MAAQc,EAAWd,GAAG,IACnEhB,EAAMoB,GAASU,CAAW,EAF5B,IAAAH,EAAAI,MAAAN,EAAAE,EAAAK,KAAAC,MAAsCJ,GAGrC,OAAAK,GAAAP,EAAAQ,EAAAD,EAAA,SAAAP,EAAAS,GAAA,CACH,EACAC,WAAU,SAAC5B,GACT,IAAMW,EAAQpB,EAAMqB,WAAU,SAACF,GAAI,OAAKA,EAAKH,MAAQP,EAAQa,OAAOC,MAAM,IAC1EvB,EAAMsC,OAAOlB,EAAO,EACtB,EACAmB,YAAW,SAAC9B,GAAU,IACS+B,EADVC,EAAAb,YACFnB,EAAQG,MAAI,QAAA8B,EAAA,eAAlB3C,EAAEyC,EAAAlC,MACLc,EAAQpB,EAAMqB,WAAU,SAACF,GAAI,OAAKA,EAAKH,MAAQjB,CAAE,IACvDC,EAAMsC,OAAOlB,EAAO,EAAG,EAFzB,IAAAqB,EAAAV,MAAAS,EAAAC,EAAAT,KAAAC,MAA+BS,GAG9B,OAAAR,GAAAO,EAAAN,EAAAD,EAAA,SAAAO,EAAAL,GAAA,CACH,GCjCWO,EAASC,IAAWC,WAAC,EAADC,YAC5BC,YAAS,CAAElD,cAAcU,I","file":"static/js/4.04dbc38f.chunk.js","sourcesContent":["export const definition = require('../TodoMVC-API.json');\n\nlet id = 0;\n\nconst items =\n  definition.paths['/items'].get.responses['200'].content['application/json']\n    .examples['example-1'].value;\n\nconst requestLogicHandlers = {\n  postItem(request) {\n    items.push({\n      ...request.body,\n      timestamp: Date.now(),\n      _id: String(id++),\n    });\n  },\n  putItem(request) {\n    const item = request.body;\n    const index = items.findIndex((item) => item._id === request.params.itemId);\n    items[index] = item;\n  },\n  putItems(request) {\n    const itemUpdates = request.body;\n    for (const itemUpdate of itemUpdates) {\n      const index = items.findIndex((item) => item._id === itemUpdate._id);\n      items[index] = itemUpdate;\n    }\n  },\n  deleteItem(request) {\n    const index = items.findIndex((item) => item._id === request.params.itemId);\n    items.splice(index, 1);\n  },\n  deleteItems(request) {\n    for (const id of request.body) {\n      const index = items.findIndex((item) => item._id === id);\n      items.splice(index, 1);\n    }\n  },\n};\nexport default requestLogicHandlers;\n","import { setupWorker } from 'msw';\nimport { handlers } from '@visma/msw-openapi-backend-integration';\nimport requestLogicHandlers, { definition } from './requestLogicHandlers';\n\nexport const worker = setupWorker(\n  ...handlers({ definition }, requestLogicHandlers)\n);\n"],"sourceRoot":""}